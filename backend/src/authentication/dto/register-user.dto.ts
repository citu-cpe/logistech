import {
  IsEmail,
  IsEnum,
  IsNotEmpty,
  IsOptional,
  IsString,
  IsUUID,
  MinLength,
} from 'class-validator';

export enum UserRoleEnum {
  CUSTOMER = 'CUSTOMER',
  SUPPLIER_PACKAGING_PERSONNEL = 'SUPPLIER_PACKAGING_PERSONNEL',
  SUPPLIER_SALES_IN_CHARGE = 'SUPPLIER_SALES_IN_CHARGE',
  SUPPLIER_LOGISTICS_IN_CHARGE = 'SUPPLIER_LOGISTICS_IN_CHARGE',
  SUPPLIER_SUPERVISOR = 'SUPPLIER_SUPERVISOR',
  STORAGE_FACILITY_COURIER_PERSONNEL = 'STORAGE_FACILITY_COURIER_PERSONNEL',
  STORAGE_FACILITY_LOGISTICS_IN_CHARGE = 'STORAGE_FACILITY_LOGISTICS_IN_CHARGE',
  STORAGE_FACILITY_SUPERVISOR = 'STORAGE_FACILITY_SUPERVISOR',
  MANUFACTURER_PACKAGING_PERSONNEL = 'MANUFACTURER_PACKAGING_PERSONNEL',
  MANUFACTURER_SALES_IN_CHARGE = 'MANUFACTURER_SALES_IN_CHARGE',
  MANUFACTURER_LOGISTICS_IN_CHARGE = 'MANUFACTURER_LOGISTICS_IN_CHARGE',
  MANUFACTURER_COURIER_PERSONNEL = 'MANUFACTURER_COURIER_PERSONNEL',
  MANUFACTURER_SUPERVISOR = 'MANUFACTURER_SUPERVISOR',
  COURIER = 'COURIER',
  RETAILER_SUPERVISOR = 'RETAILER_SUPERVISOR',
}

export class RegisterUserDTO {
  @IsEmail()
  @IsString()
  @IsNotEmpty()
  public email: string;

  @IsString()
  @IsNotEmpty()
  public username: string;

  @IsString()
  @IsNotEmpty()
  public address: string;

  @IsString()
  @IsNotEmpty()
  @MinLength(4)
  public password: string;

  @IsUUID()
  @IsOptional()
  public companyId?: string;

  @IsEnum(UserRoleEnum)
  public role: UserRoleEnum;
}
